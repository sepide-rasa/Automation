@using Kendo.Mvc.UI;
<div class="modal" id="CheckReciverAndSender">
    @Automation.Helper.winClass.windowHeader("", "ویرایش", 600, 350)
    <script src="@Url.Content("~/Content/Base.js")" type="text/javascript"></script>
    <div>
        <br />
        <center>
            <table>
                <tr>
                    <td align="center" colspan="6">
                        <p>
                            @Automation.Helper.winClass.Buttons("SelectVorudi", "انتخاب", "Next")
                            @Automation.Helper.winClass.Buttons("exitVorudi", "خروج", "Exit")
                        </p>
                    </td>
                </tr>
            </table>
        </center>
        <div class="k-rtl demo-section">
            @(Html.Kendo().Grid<Automation.Models.InternalAssignment>()
                .Name("GridVorudi")
                .Scrollable(scrollable => scrollable.Virtual(true).Height(497))
                .Columns(columns =>
                {
                    columns.Template(@<text></text>).ClientTemplate("<input type='checkbox' value='#=fldID#' name='selected'/>").Width(35).HeaderTemplate(@<input type="checkbox" id="selectAll1" />);
                    columns.Bound(p => p.fldID).Title("کد شخص").Hidden();
                    columns.Bound(p => p.AssignmentId).Title("نوع شخص").Hidden();
                    columns.Bound(p => p.fldDesc).Title("نام و نام خانوادگی");

                })
                .Editable(editable => editable.Mode(GridEditMode.InCell))
                .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                .Scrollable(scrol => scrol.Enabled(true))
                .Resizable(resize => resize.Columns(true))
                .DataSource(data =>
                data.Ajax()
                .Model(m =>
                {
                    m.Id(p => p.fldID);
                    m.Field(p => p.fldDesc).Editable(false);
                })
                )
            )
        </div>
    </div>
    <script type="text/javascript">
        var State;
        var roneveshtName = '';
        $("document").ready(function () {
            State = '@ViewBag.State';
            var _Reciver_sender = '@ViewBag.Reciver_sender';
            var _Reciver_senderId = '@ViewBag.Reciver_senderId';
            $("#SelectVorudi").button();
            $("#exitVorudi").button();

            $("#exitVorudi").click(function () {
                $("#CheckReciverAndSender").remove();
                isWinOpen = false;
            });


            $('#CheckReciverAndSender #btnClose').click(function () {
                $("#CheckReciverAndSender").remove();
                isWinOpen = false;
            });

            $(document).keyup(function (e) {
                if (e.keyCode == 27) {
                    $("#CheckReciverAndSender").remove();
                    isWinOpen = false;
                }
            });

            $('#selectAll1').click(function () {
                $("#GridVorudi tbody input:checkbox").attr("checked", this.checked);

            });

            var url = '@Url.Action("ReloadGride", "CheckReciverAndSender")';
            ReloadVorudi(url, 'GridVorudi', _Reciver_sender, _Reciver_senderId);



            $("#SelectVorudi").click(function () {
                switch (State) {
                    case "1":
                        girandeName = girandeID = '';
                        $('#Girandegan').html('');
                        break;
                    case "2":
                        SignID = SignName = '';
                        $('#lblSigner').html('');
                        break;
                    case "3":
                        rooneveshtName = rooneveshtID = '';
                        $('#Roonevesht').html('');
                        break;
                    case "5":
                        ReceiverName = ReceiverID = '';
                        $('#Girandegan').html('');
                        break;
                    case "6":
                        SenderName = SenderID = '';
                        $('#SenderOragan').html('');
                        break;
                    case "7":
                        rooneveshtName = rooneveshtID = '';
                        $('#Roonevesht').html('');
                        break;
                    case "8":
                        AssignmentName = AssignmentId = '';
                        $('#Reciver').html('');
                        break;
                }
                var entityGrid = $("#GridVorudi").data("kendoGrid");
                var row = entityGrid.items();
                var t = $('#CheckReciverAndSender input[type=checkbox]');
                
                for (var i = 0; i < t.length - 1; i++) {

                    if (t.valueOf()[i + 1].checked && State == "1") {
                        var Id = row[i].cells[1].innerText + '|' + row[i].cells[2].innerText;
                        var Name = row[i].cells[3].innerText;
                        girandeName = girandeName + Name + ';';
                        girandeID = girandeID + Id + ';';
                        $('#Girandegan').html(girandeName);
                    }
                    else if (t.valueOf()[i + 1].checked && State == "2") {
                        var Id = row[i].cells[1].innerText;
                        var Name = row[i].cells[3].innerText;
                        SignName = SignName + Name + ';';
                        SignID = SignID + Id + ';';
                        $('#lblSigner').html(SignName);
                    }
                    else if (t.valueOf()[i + 1].checked && State == "3") {
                        var Id = row[i].cells[1].innerText + '|' + row[i].cells[2].innerText;
                        var Name = row[i].cells[3].innerText;
                        rooneveshtName = rooneveshtName + Name + ';';
                        rooneveshtID = rooneveshtID + Id + ';';
                        $('#Roonevesht').html(rooneveshtName);
                    }
                    else if (t.valueOf()[i + 1].checked && State == "4") {
                        roneveshtName += row[i].cells[3].innerText + '\n';
                    }
                    else if (t.valueOf()[i + 1].checked && State == "5") {
                        var Id = row[i].cells[1].innerText;
                        var Name = row[i].cells[3].innerText;
                        ReceiverName = ReceiverName + Name + ';';
                        ReceiverID = ReceiverID + Id + ';';
                        $('#Girandegan').html(ReceiverName);
                    }
                    else if (t.valueOf()[i + 1].checked && State == "6") {
                        var Id = row[i].cells[1].innerText;
                        var Name = row[i].cells[3].innerText;
                        SenderName = SenderName + Name + ';';
                        SenderID = SenderID + Id + ';';
                        $('#SenderOragan').html(SenderName);
                    }
                    else if (t.valueOf()[i + 1].checked && State == "7") {
                        var Id = row[i].cells[1].innerText + '|' + row[i].cells[2].innerText;
                        var Name = row[i].cells[3].innerText;
                        rooneveshtName = rooneveshtName + Name + ';';
                        rooneveshtID = rooneveshtID + Id + ';';
                        $('#Roonevesht').html(rooneveshtName);
                    }
                    else if (t.valueOf()[i + 1].checked && State == "8") {
                        var Id = row[i].cells[1].innerText + '|' + row[i].cells[2].innerText;
                        var Name = row[i].cells[3].innerText;
                        AssignmentName = AssignmentName + Name + ';';
                        AssignmentId = AssignmentId + Id + ';';
                        $('#Reciver').html(AssignmentName);
                    }
                }
                if (State == "4") {
                    if (LetterID == null || LetterID == 0 || LetterID == '') {
                        windowAppend('body', '/metro/error');
                        $('#message').html('نامه ای جهت چاپ وجود ندارد.');
                        $("#error .wintitle").html("خطا");
                    }
                    else {
                        var have = 0;
                        $.ajax({
                            type: "GET",
                            url: '/LetterContent/CheckHaveFile',
                            data: {
                                LetterID: LetterID
                            },
                            success: function (data) {
                                have = data.have;
                                if (have == 1) {
                                    windowAppendData('body', '/LetterContent/ViewDoc', { id: LetterID, state: 3, Ronevesht: 'رونوشت:\n' + roneveshtName });
                                }
                                else {
                                    windowAppend('body', '/metro/error');
                                    $('#message').html('نامه حاوی متن نمی باشد.');
                                    $("#error .wintitle").html("خطا");
                                }
                            }
                        });
                    }
                }
                else {
                    isWinOpen = false;
                    $('#CheckReciverAndSender').remove();
                }
            });
        });

        function Clear() {
            $("#fldStopTime").val('');
            $("#txtDesc").val('');
            $('#fldId').val(0)
        }

        function ReloadVorudi(Url, gridname, Reciver_sender, Reciver_senderId) {
            var grid = $('#' + gridname).data('kendoGrid');
            $.ajax({
                url: Url,
                type: 'post',
                datatype: 'json',
                data: { Reciver_sender: Reciver_sender, Reciver_senderId: Reciver_senderId },
                error: function (xhr, status, error) {
                    alert(xhr + status);
                },
                success: function (result) {
                    $("#" + gridname).data("kendoGrid").dataSource.data(result);
                    $("#" + gridname + " tbody input:checkbox").attr("checked", true);
                }
            });
        }

        function PostFormVorudi(datas, url, id) {
            var sendInfo = datas;
            $('#Lock').show();
            $.ajax({
                type: "POST",
                url: url,
                datatype: "json",
                data: JSON.stringify(sendInfo),
                contentType: 'application/json',
                success: function (data) {
                    var m = data;
                    windowAppend("body", "/metro/error");
                    $("#message").html(m.data);
                    switch (m.state) {
                        case 0:
                            $("#error .wintitle").html("ذخیره موفق");
                            break;
                        case 1:
                            $("#error .wintitle").html("خطا");
                            break;
                    }
                    var url = '@Url.Action("Reload", "CheckReciverAndSender")';
                    ReloadVorudi(url, 'GridVorudi', '0', '', 30, 1);
                    $('#Lock').hide();

                },
                failure: function (data) {
                    alert(data.data);
                }
            });
        }

    </script>
    @Automation.Helper.winClass.windowFother();
</div>
