@using Kendo.Mvc.UI;
<div id="SearchAssignmntRole">
    @Automation.Helper.winClass.windowHeader("", "جستجو کارمند", 600, 460)
    <script src="@Url.Content("~/Content/Base.js")" type="text/javascript"></script>
    <div>
        <br />
        <div>
            <center>
                <table>
                    <tr>
                        <td>
                            فیلد جستجو:@Html.DropDownList("cboSearchFiald1", new SelectList(new[] { new { ID = "0", Name = "نام و نام خانوادگی" } }, "ID", "Name"))
                        </td>
                        <td>
                            نوع جستجو: @Html.DropDownList("cboSearchType1", new SelectList(new[] { new { ID = "0", Name = "مشابه عبارت" }, new { ID = "1", Name = "مشابه عبارت از سمت راست" }, new { ID = "2", Name = "عین عبارت" } }, "ID", "Name"))
                        </td>
                    </tr>
                    <tr>
                        <td>
                            عبارت جستجو: @Automation.Helper.winClass.textbox("txtSearch1")
                        </td>
                        <td>
                            نتیجه رکوردها: @Html.TextBox("txtTop1", 30, new { @style = "width:30px;" }) رکورد
                        </td>
                    </tr>
                    <tr id="HidenRow">
                        <td align="left">
                            @(Html.Kendo().DropDownList()
                                .Name("cboAssType")
                                  .DataTextField("fldName")
                                  .DataValueField("fldID")
                                  .DataSource(source =>
                                  {
                                      source.Read(read =>
                                      {
                                          read.Action("GetAssignmentTypes", "SearchAssignmntRole");
                                      });
                                  })
                                  )
                        </td>
                        <td>
                            توضیحات: @Automation.Helper.winClass.textbox("txtAssDesc")
                        </td>
                    </tr>
                </table>
            </center>
            <br />
        </div>
        <center>
            <p>
                @Automation.Helper.winClass.Buttons("Select", "انتخاب", "Next")
                @if ((int)ViewBag.Type != 2)
                {
                    @Automation.Helper.winClass.Buttons("btnNew", "ارگان جدید", "yes")
                }
                @Automation.Helper.winClass.Buttons("exit1", "خروج", "Exit")
            </p>
        </center>
        <div class="k-rtl demo-section">
            @(Html.Kendo().Grid<Automation.Models.sp_tblAssignmentRoleSelectRecivers>()
                .Name("searchGrid")
                .Columns(columns =>
                {
                    columns.Template(@<text></text>).ClientTemplate("<input type='checkbox' value='#=fldID#' name='selectedReciver'/>").Width(35)
                    .HeaderTemplate(@<input type="checkbox" id="selectAlls" />);
                    columns.Bound(p => p.fldID).Title("کد").Visible(false);
                    columns.Bound(p => p.fldReceiverComisionName).Title("نام");
                    columns.Bound(p => p.fldtype).Title("نوع").Hidden(true);
                })
                    .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                    .Pageable()
                    .Scrollable()
                    .DataSource(data =>
                        data.Ajax()
                        .PageSize(10)
                        .Read("Fill", "SearchAssignmntRole")
                    )
                )
        </div>
    </div>
    <script type="text/javascript">
        var state;
        var _WinOpen = false;
        $("document").ready(function () {
            $("#Select").button();
            $("#exit1").button();
            $("#btnNew").button();
            $("#btnNew").click(function () {
                if (_WinOpen == false) {
                    windowAppend('body', '/CommonWin');
                    _WinOpen = true;
                    windows('#WinContent', '/ExternalPartner');
                    $('#txtName').focus();
                    $('#txtName').val($('#txtSearch1').val());
                }
            });
            $('#selectAlls').click(function () {
                $("#SearchAssignmntRole #searchGrid tbody input:checkbox").attr("checked", this.checked);
            });
            var isWinOpern = false;
            state = '@ViewBag.state';
            if (state != 2)
                $('#HidenRow').attr('style', 'display:none;');
            else
                $('#HidenRow').attr('style', '');

            $("#exit1").click(function () {
                isWinOpen = false;
                $("#SearchAssignmntRole").remove();
            });
            $('#SearchAssignmntRole #btnClose').click(function () {
                $("#SearchAssignmntRole").remove();
                isWinOpen = false;
            });
            $(document).keyup(function (e) {
                if (e.keyCode == 27) {
                    $("#SearchAssignmntRole").remove();
                    isWinOpen = false;
                }
            });
            $('#SearchAssignmntRole #searchGrid table tr').live('dblclick', function () { SelectRoww(); });
           

            $('#Select').click(function () {
               SelectRoww();
            });
            function SelectRoww() {
                var entityGrid = $("#searchGrid").data("kendoGrid");
                var row = entityGrid.items();
                var t = $('#SearchAssignmntRole #searchGrid input[type=checkbox]');
                //var SelectedLetterIds = '';
                for (var j = 0; j < t.length - 1; j++) {
                    if (t.valueOf()[j + 1].checked) {
                        var selectedItem = entityGrid.dataItem(row[j]);
                        var id = selectedItem.fldID;
                        var name = selectedItem.fldReceiverComisionName;
                        var type = selectedItem.fldtype;
                        //isWinOpen = false;
                        if (state == 1) {
                            var h = girandeID.split(';');
                            var isid = false;
                            for (var i = 0; i < h.length; i++) {
                                if (h[i] == id + '|' + type) {
                                    isid = true;
                                    break;
                                }
                            }
                            if (isid == false) {
                                girandeName = girandeName + name + ';';
                                girandeID = girandeID + id + '|' + type + ';';
                            }
                            else {
                                windowAppend("body", "/metro/error");
                                $("#message").html('گیرنده نامه تکراری است.');
                                $("#error .wintitle").html("خطا");
                            }
                            $('#Girandegan').html(girandeName);
                            //isWinOpen = false;
                        }
                        else if (state == 2) {
                            var h = rooneveshtID.split(';');
                            var isid = false;
                            for (var i = 0; i < h.length; i++) {
                                if (h[i] == id + '|' + type) {
                                    isid = true;
                                    break;
                                }
                            }
                            if (isid == false) {
                                var y = $('#cboAssType').data('kendoDropDownList');
                                var s = y.text();
                                if ($('#txtAssDesc').val() != '')
                                    s += ' ' + $('#txtAssDesc').val();
                                rooneveshtName = rooneveshtName + name + '-' + s + ';';
                                rooneveshtID = rooneveshtID + id + '|' + type + ';';
                                AssignmentTypeId = AssignmentTypeId + $('#cboAssType').val() + ';';
                                AssignmentDesc = AssignmentDesc + $('#txtAssDesc').val() + ';';
                            }
                            else {
                                windowAppend("body", "/metro/error");
                                $("#message").html('رونوشت نامه تکراری است.');
                                $("#error .wintitle").html("خطا");
                            }
                            $('#Roonevesht').html(rooneveshtName);
                            //isWinOpen = false;
                        }
                        else if (state == 3) {
                            var h = AssignmentId.split(';');
                            var isid = false;
                            for (var i = 0; i < h.length; i++) {
                                if (h[i] == id) {
                                    isid = true;
                                    break;
                                }
                            }
                            if (isid == false) {
                                AssignmentName = AssignmentName + name + ';';
                                AssignmentId = AssignmentId + id + ';';
                            }
                            else {
                                windowAppend("body", "/metro/error");
                                $("#message").html('ارجاع گیرنده تکراری است.');
                                $("#error .wintitle").html("خطا");
                            }
                            $('#Reciver').html(AssignmentName);
                            $('#txtReciver').val('');
                            //isWinOpen = false;
                        }
                        else if (state == 4) {
                            ReceiverComisionId = id;
                            $('#lblKarmand').html(name);
                            isWinOpen = false;
                        }
                        else if (state == 5) {
                            var h = SenderID.split(';');
                            var isid = false;
                            for (var i = 0; i < h.length; i++) {
                                if (h[i] == id) {
                                    isid = true;
                                    break;
                                }
                            }
                            if (isid == false) {
                                SenderName = SenderName + name + ';';
                                SenderID = SenderID + id + ';';
                            }
                            else {
                                windowAppend("body", "/metro/error");
                                $("#message").html('نام ارگان تکراری است.');
                                $("#error .wintitle").html("خطا");
                            }
                            $('#SenderOragan').html(SenderName);
                            //isWinOpen = false;
                        }
                        else if (state == 6) {
                            var h = ReceiverID.split(';');
                            var isid = false;
                            for (var i = 0; i < h.length; i++) {
                                if (h[i] == id) {
                                    isid = true;
                                    break;
                                }
                            }
                            if (isid == false) {
                                ReceiverName = ReceiverName + name + ';';
                                ReceiverID = ReceiverID + id + ';';
                            }
                            else {
                                windowAppend("body", "/metro/error");
                                $("#message").html('نام گیرنده نامه تکراری است.');
                                $("#error .wintitle").html("خطا");
                            }
                            $('#Girandegan').html(ReceiverName);

                        }

                    }
                }
                isWinOpen = false;
                $('#SearchAssignmntRole').remove();
                //                var selectedItem = entityGrid.dataItem(entityGrid.select());
                //                if (selectedItem) {
                //                    
                //                }
                //                else {
                //                    windowAppend('body', '/metro/error');
                //                    $('#message').html('لطفا یک سطر را انتخاب کنید.');
                //                    $("#error .wintitle").html("خطا");
                //                }
            }

            $('#txtSearch1').keyup(function () {
                var url = '@Url.Action("Reload", "SearchAssignmntRole")';
                Reload(url, 'searchGrid', $("#cboSearchFiald1").val(), $("#txtSearch1").val(), $("#txtTop1").val(), $("#cboSearchType1").val());
            });


        });

        function Reload(Url, gridname, field, value, top, searchType) {
            var grid = $('#' + gridname).data('kendoGrid');
            $.ajax({
                url: Url,
                type: 'get',
                datatype: 'json',
                data: { field: field, value: value, top: top, searchtype: searchType },
                error: function (xhr, status, error) {
                    alert(xhr + status);
                },
                success: function (result) {
                    $("#" + gridname).data("kendoGrid").dataSource.data(result);
                }

            });
        }


    </script>
    @Automation.Helper.winClass.windowFother();
</div>
