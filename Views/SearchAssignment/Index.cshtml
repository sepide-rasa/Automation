@using Kendo.Mvc.UI;
<div id="search">
    @Automation.Helper.winClass.windowHeader("", "جستجو کارمند", 600, 450)
    <script src="@Url.Content("~/Content/Base.js")" type="text/javascript"></script>
    <div>
        <br />
        <div>
            <center>
                <table>
                    <tr>
                        <td>
                            فیلد جستجو:@Html.DropDownList("cboSearchFiald1", new SelectList(new[] { new { ID = "0", Name = "نام و نام خانوادگی" } }, "ID", "Name"))
                        </td>
                        <td>
                            نوع جستجو: @Html.DropDownList("cboSearchType1", new SelectList(new[] { new { ID = "0", Name = "مشابه عبارت" }, new { ID = "1", Name = "مشابه عبارت از سمت راست" }, new { ID = "2", Name = "عین عبارت" } }, "ID", "Name"))
                        </td>
                    </tr>
                    <tr>
                        <td>
                            عبارت جستجو: @Automation.Helper.winClass.textbox("txtSearch1")
                        </td>
                        <td>
                            نتیجه رکوردها: @Html.TextBox("txtTop1", 30, new { @style = "width:30px;" }) رکورد
                        </td>
                    </tr>
                </table>
            </center>
            <br />
        </div>
        <div>
            <table>
                <tr>
                    <td align="right">
                        نوع ارجاع:
                    </td>
                    <td align="right">
                        @(Html.Kendo().DropDownList()
                        .Name("cboAssignmentTypee")
                        .DataTextField("fldName")
                        .DataValueField("fldID")
                        .DataSource(source =>
                       {
                           source.Read(read =>
                           {
                               read.Action("GetAssignmentType", "SearchAssignment");
                           });
                       }).HtmlAttributes(new { @style = "width:250px;" })
                         )
                        <span id="lblAssignmentTypeError" style="color: Red;"></span>
                    </td>
                </tr>
            </table>
        </div>
        <center>
            <p>
                @Automation.Helper.winClass.Buttons("Select", "انتخاب", "Next")
                @Automation.Helper.winClass.Buttons("exit1", "خروج", "Exit")
            </p>
        </center>
        <div class="k-rtl demo-section">
            @(Html.Kendo().Grid<Automation.Models.sp_tblAssignmentRoleSelectRecivers>()
                .Name("searchGrid")
                .Columns(columns =>
                {
                    columns.Template(@<text></text>).ClientTemplate("<input type='checkbox' value='#=fldID#' name='selectedReciver'/>").Width(35)
                    .HeaderTemplate(@<input type="checkbox" id="selectAlls" />);
                    columns.Bound(p => p.fldID).Title("کد").Visible(false);
                    columns.Bound(p => p.fldReceiverComisionName).Title("نام");
                })
                    .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                    .Pageable()
                    .Scrollable()
                    .DataSource(data =>
                        data.Ajax()
                        .PageSize(10)
                                .Read("Fill", "SearchAssignment")
                    )
                )
        </div>
    </div>
    <script type="text/javascript">

        $("document").ready(function () {
            $("#Select").button();
            $("#exit1").button();
            var isWinOpen = false;

            var state = '@ViewBag.state';
            $("#exit1").click(function () {
                WindowOpen = false;
                $("#search").remove();
            });
            $('#selectAlls').click(function () {
                $("#search #searchGrid tbody input:checkbox").attr("checked", this.checked);
            });
            $('#Select').click(function () {
                var entityGrid = $("#searchGrid").data("kendoGrid");
                var row = entityGrid.items();
                var t = $('#search #searchGrid input[type=checkbox]');
                //if (selectedItem) {
                for (var j = 0; j < t.length - 1; j++) {
                    if (t.valueOf()[j + 1].checked) {
                        var selectedItem = entityGrid.dataItem(row[j]);
                        var id = selectedItem.fldID;
                        var name = selectedItem.fldReceiverComisionName;

                        if (state == 2) {
                            var h = rooneveshtID.split(';');
                            var isid = false;
                            for (var i = 0; i < h.length; i++) {
                                if (h[i] == id) {
                                    isid = true;
                                    break;
                                }
                            }
                            if (isid == false) {
                                rooneveshtName = rooneveshtName + name + ';';
                                rooneveshtID = rooneveshtID + id + ';';
                                AssignmentId = $('#cboAssignmentTypee').val();
                            }
                            else {
                                windowAppend("body", "/metro/error");
                                $("#message").html('رونوشت نامه تکراری است.');
                                $("#error .wintitle").html("خطا");
                            }
                            $('#Roonevesht').html(rooneveshtName);
                        }
                        else if (state == 3) {
                            var h = AssignmentId.split(';');
                            var isid = false;
                            for (var i = 0; i < h.length; i++) {
                                if (h[i] == id) {
                                    isid = true;
                                    break;
                                }
                            }
                            if (isid == false) {
                                var y = $('#cboAssignmentTypee').data('kendoDropDownList');
                                var s = y.text();
                                AssignmentName = AssignmentName + name + '(' + s + ')' + ';';
                                AssignmentId = AssignmentId + id + ';';
                                AssignmentType = AssignmentType + $('#cboAssignmentTypee').val() + ';';
                            }
                            else {
                                windowAppend("body", "/metro/error");
                                $("#message").html('ارجاع گیرنده تکراری است.');
                                $("#error .wintitle").html("خطا");
                            }
                            $('#Reciver').html(AssignmentName);
                            $('#txtReciver').val('');
                            WindowOpen = false;
                        }
                        
                    }
                }
                $('#search').remove();
            });

            $('#search #searchGrid table tr').live('dblclick', function () {
                var entityGrid = $("#searchGrid").data("kendoGrid");
                var selectedItem = entityGrid.dataItem(entityGrid.select());
                if (selectedItem) {
                    var id = selectedItem.fldID;
                    var name = selectedItem.fldReceiverComisionName;

                    if (state == 2) {
                        var h = rooneveshtID.split(';');
                        var isid = false;
                        for (var i = 0; i < h.length; i++) {
                            if (h[i] == id) {
                                isid = true;
                                break;
                            }
                        }
                        if (isid == false) {
                            rooneveshtName = rooneveshtName + name + ';';
                            rooneveshtID = rooneveshtID + id + ';';
                            AssignmentId = $('#cboAssignmentTypee').val();
                        }
                        else {
                            windowAppend("body", "/metro/error");
                            $("#message").html('رونوشت نامه تکراری است.');
                            $("#error .wintitle").html("خطا");
                        }
                        $('#Roonevesht').html(rooneveshtName);
                    }
                    else if (state == 3) {
                        var h = AssignmentId.split(';');
                        var isid = false;
                        for (var i = 0; i < h.length; i++) {
                            if (h[i] == id) {
                                isid = true;
                                break;
                            }
                        }
                        if (isid == false) {
                            var y = $('#cboAssignmentTypee').data('kendoDropDownList');
                            var s = y.text();
                            AssignmentName = AssignmentName + name + '(' + s + ')' + ';';
                            AssignmentId = AssignmentId + id + ';';
                            AssignmentType = AssignmentType + $('#cboAssignmentTypee').val() + ';';
                        }
                        else {
                            windowAppend("body", "/metro/error");
                            $("#message").html('ارجاع گیرنده تکراری است.');
                            $("#error .wintitle").html("خطا");
                        }
                        $('#Reciver').html(AssignmentName);
                        $('#txtReciver').val('');
                        WindowOpen = false;
                    }
                    $('#search').remove();
                }
                else {
                    windowAppend('body', '/metro/error');
                    $('#message').html('لطفا یک سطر را انتخاب کنید.');
                    $("#error .wintitle").html("خطا");
                }
            });
            $('#search #btnClose').click(function () {
                $("#search").remove();
                WindowOpen = false;
            });

            $('#txtSearch1').keyup(function () {
                var url = '@Url.Action("Reload", "SearchAssignment")';
                Reload(url, 'searchGrid', $("#cboSearchFiald1").val(), $("#txtSearch1").val(), $("#txtTop1").val(), $("#cboSearchType1").val());
            });


        });

        function Reload(Url, gridname, field, value, top, searchType) {
            var grid = $('#' + gridname).data('kendoGrid');
            $.ajax({
                url: Url,
                type: 'get',
                datatype: 'json',
                data: { field: field, value: value, top: top, searchtype: searchType },
                error: function (xhr, status, error) {
                    alert(xhr + status);
                },
                success: function (result) {
                    $("#" + gridname).data("kendoGrid").dataSource.data(result);
                }

            });
        }


    </script>
    @Automation.Helper.winClass.windowFother();
</div>
